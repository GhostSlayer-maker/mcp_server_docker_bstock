services:
  mcp_service:
    env_file:
      - .env
    container_name: mcp_service
    
    build: .
    image: mcp_service_image
    
    # Usar variables de entorno desde .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - MCP_HOST=${MCP_HOST}
      - MCP_PORT=${MCP_PORT}
      - API_KEY=${API_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - DEFAULT_QUERY_LIMIT=${DEFAULT_QUERY_LIMIT}
      - MAX_QUERY_LIMIT=${MAX_QUERY_LIMIT}
    
    volumes:
      - .:/app
      - ./python_libs:/usr/src/app/site-packages  # persist Python packages
    
    ports:
      - "${MCP_PORT}:${MCP_PORT}"
    
    # AGREGA ESTA LÍNEA PARA EJECUTAR EN MODO PRODUCCIÓN
    command: python -m uvicorn odoo_mcp.mcp_server:app --host 0.0.0.0 --port 5000 --reload
    
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    restart: unless-stopped
    
    # Configuración de recursos usando variables de entorno
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT}'
          memory: '${MEMORY_LIMIT}'
        reservations:
          cpus: '${CPU_RESERVATION}'
          memory: '${MEMORY_RESERVATION}'
    
    # Configuración de logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"